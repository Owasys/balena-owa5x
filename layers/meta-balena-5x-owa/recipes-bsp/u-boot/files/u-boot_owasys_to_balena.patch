diff --git a/arch/arm/mach-imx/cmd_nandbcb.c b/arch/arm/mach-imx/cmd_nandbcb.c
index 8b98ca6a..a447df39 100644
--- a/arch/arm/mach-imx/cmd_nandbcb.c
+++ b/arch/arm/mach-imx/cmd_nandbcb.c
@@ -128,6 +128,7 @@ static struct platform_config imx8q_plat_config = {
 
 /* boot search related variables and definitions */
 static int g_boot_search_count = 4;
+static int g_boot_secondary_offset;
 static int g_boot_search_stride;
 static int g_pages_per_stride;
 
@@ -267,8 +268,8 @@ static int nandbcb_set_boot_config(int argc, char * const argv[], struct boot_co
 	boot_stream2_address = ((maxsize - boot_stream1_address) / 2 +
 			       boot_stream1_address);
 
-	if (boot_cfg->secondary_boot_stream_off_in_MB) {
-		boot_stream2_address = (loff_t)boot_cfg->secondary_boot_stream_off_in_MB * 1024 * 1024;
+	if (g_boot_secondary_offset) {
+		boot_stream2_address = (loff_t)g_boot_secondary_offset * 1024 * 1024;
 	}
 
 	max_boot_stream_size = boot_stream2_address - boot_stream1_address;
@@ -1511,6 +1512,11 @@ static int do_nandbcb(cmd_tbl_t *cmdtp, int flag, int argc,
 		       g_boot_search_count);
 	}
 
+	if (plat_config.misc_flags & FIRMWARE_SECONDARY_FIXED_ADDR) {
+		if (is_imx8mp())
+			g_boot_secondary_offset = fuse_secondary_boot(2, 1, 0xff0000, 16);
+	}
+
 	cmd = argv[1];
 	--argc;
 	++argv;
diff --git a/arch/arm/mach-imx/spl_imx_romapi.c b/arch/arm/mach-imx/spl_imx_romapi.c
index 7e6a05a6..4ee2960d 100644
--- a/arch/arm/mach-imx/spl_imx_romapi.c
+++ b/arch/arm/mach-imx/spl_imx_romapi.c
@@ -10,6 +10,8 @@
 #include <spl.h>
 
 #include <asm/arch/sys_proto.h>
+#include <fuse.h>
+#include <bloblist.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -53,24 +55,40 @@ static ulong spl_romapi_read_seekable(struct spl_load_info *load,
 	return 0;
 }
 
+static int setup_spl_uboot_offset( u32 offset)
+{
+	u32 *pval;
+
+	pval = bloblist_find(BLOBLISTT_SPL_UBOOT_OFF, sizeof(u32));
+	if (!pval)
+		return -ENOENT;
+
+	*pval = offset;
+	return 0;
+}
+
 static int spl_romapi_load_image_seekable(struct spl_image_info *spl_image,
 					  struct spl_boot_device *bootdev,
 					  u32 rom_bt_dev)
 {
 	volatile gd_t *pgd = gd;
-	int ret;
+	int ret, second_img_offset = 0;
 	u32 offset;
 	u32 pagesize, size;
 	struct image_header *header;
 	u32 image_offset;
 
+again:
 	ret = g_rom_api->query_boot_infor(QUERY_IVT_OFF, &offset,
 					  ((uintptr_t)&offset) ^ QUERY_IVT_OFF);
 	ret |= g_rom_api->query_boot_infor(QUERY_PAGE_SZ, &pagesize,
 					   ((uintptr_t)&pagesize) ^ QUERY_PAGE_SZ);
-	ret |= g_rom_api->query_boot_infor(QUERY_IMG_OFF, &image_offset,
+   if( second_img_offset == 0) {
+      ret |= g_rom_api->query_boot_infor(QUERY_IMG_OFF, &image_offset,
 					   ((uintptr_t)&image_offset) ^ QUERY_IMG_OFF);
-
+   } else {
+      image_offset = second_img_offset;
+   }
 	gd = pgd;
 
 	if (ret != ROM_API_OKAY) {
@@ -108,8 +126,19 @@ static int spl_romapi_load_image_seekable(struct spl_image_info *spl_image,
 		load.bl_len = pagesize;
 		load.read = spl_romapi_read_seekable;
 		load.priv = &pagesize;
-		return spl_load_simple_fit(spl_image, &load,
+		ret = spl_load_simple_fit(spl_image, &load,
 					   offset / pagesize, header);
+      if( ret != 0) {
+         second_img_offset = fuse_secondary_boot(2, 1, 0xff0000, 16);
+         if( second_img_offset) {
+            second_img_offset = (loff_t)second_img_offset * 1024 * 1024;
+         }
+         if( second_img_offset && (second_img_offset != image_offset)) {
+            goto again;
+         }
+      }
+      setup_spl_uboot_offset( image_offset);
+      return ret;
 	} else {
 		/* TODO */
 		puts("Can't support legacy image\n");
diff --git a/common/board_f.c b/common/board_f.c
index 977a0274..b1c4d9cc 100644
--- a/common/board_f.c
+++ b/common/board_f.c
@@ -296,6 +296,19 @@ static int setup_spl_handoff(void)
 	return 0;
 }
 
+static int setup_spl_uboot_offset(void)
+{
+	u32 *pval;
+
+	pval = bloblist_find(BLOBLISTT_SPL_UBOOT_OFF, sizeof(u32));
+	if (!pval)
+		return -ENOENT;
+
+	gd->uboot_offset_image = *pval;
+	return 0;
+}
+
+
 __weak int arch_cpu_init(void)
 {
 	return 0;
@@ -886,6 +899,7 @@ static const init_fnc_t init_sequence_f[] = {
 #ifdef CONFIG_BLOBLIST
 	bloblist_init,
 #endif
+   setup_spl_uboot_offset,
 	setup_spl_handoff,
 	initf_console_record,
 #if defined(CONFIG_HAVE_FSP)
diff --git a/common/board_r.c b/common/board_r.c
index 2c7637e7..2c045523 100644
--- a/common/board_r.c
+++ b/common/board_r.c
@@ -507,6 +507,7 @@ static int initr_env(void)
          }
       }
       env_set_ulong("badblocks", numbad);
+      env_set_hex("uboot_img_addr", gd->uboot_offset_image);
    }
 
 	return 0;
diff --git a/common/spl/spl.c b/common/spl/spl.c
index 932e6ab9..da8ef0e1 100644
--- a/common/spl/spl.c
+++ b/common/spl/spl.c
@@ -408,6 +408,18 @@ static inline int write_spl_handoff(void) { return 0; }
 
 #endif /* HANDOFF */
 
+static int setup_spl_uboot_offset(void)
+{
+	u32 *pval;
+
+	pval = bloblist_ensure(BLOBLISTT_SPL_UBOOT_OFF, sizeof(u32));
+	if (!pval)
+		return -ENOENT;
+
+	return 0;
+}
+
+
 static int spl_common_init(bool setup_malloc)
 {
 	int ret;
@@ -661,7 +673,7 @@ void board_init_r(gd_t *dummy1, ulong dummy2)
 			hang();
 		}
 	}
-
+	setup_spl_uboot_offset();
 #if CONFIG_IS_ENABLED(BOARD_INIT)
 	spl_board_init();
 #endif
diff --git a/configs/imx8mp_owa5x_defconfig b/configs/imx8mp_owa5x_defconfig
index f01ca171..53535312 100644
--- a/configs/imx8mp_owa5x_defconfig
+++ b/configs/imx8mp_owa5x_defconfig
@@ -35,10 +35,12 @@ CONFIG_SPL_I2C_SUPPORT=y
 CONFIG_SPL_POWER_SUPPORT=y
 CONFIG_NR_DRAM_BANKS=3
 CONFIG_HUSH_PARSER=y
-CONFIG_SYS_PROMPT="u-boot=> "
+CONFIG_SYS_PROMPT="owa5x=>"
 CONFIG_BOOTDELAY=0
-# CONFIG_CMD_EXPORTENV is not set
-# CONFIG_CMD_IMPORTENV is not set
+CONFIG_CMD_EXPORTENV=y
+CONFIG_CMD_IMPORTENV=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_FS_UUID=y
 CONFIG_CMD_ERASEENV=y
 CONFIG_CMD_CRC32 is not set
 # CONFIG_BOOTM_NETBSD is not set
@@ -62,17 +64,17 @@ CONFIG_CMD_LED=y
 CONFIG_OF_CONTROL=y
 CONFIG_DEFAULT_DEVICE_TREE="imx8mp-owa5x"
 CONFIG_ENV_IS_IN_MMC=y
-CONFIG_ENV_IS_IN_SPI_FLASH=y
+CONFIG_ENV_IS_IN_SPI_FLASH=n
 CONFIG_ENV_IS_IN_NAND=y
 CONFIG_ENV_IS_NOWHERE=y
-CONFIG_ENV_SIZE=0x100000
-CONFIG_ENV_OFFSET=0x01000000
+CONFIG_ENV_SIZE=0x80000
+CONFIG_ENV_OFFSET=0x200000
 CONFIG_ENV_SECT_SIZE=0x40000
 CONFIG_SYS_ENV_SECT_SIZE=0x40000
 CONFIG_SYS_REDUNDAND_ENVIRONMENT=y
 #CONFIG_ENV_ADDR_REDUND=0x01100000
-CONFIG_ENV_OFFSET_REDUND=0x01100000
-CONFIG_ENV_SIZE_REDUND=0x100000
+CONFIG_ENV_OFFSET_REDUND=0x300000
+CONFIG_ENV_SIZE_REDUND=0x80000
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 #CONFIG_ENV_VARS_UBOOT_RUNTIME=y
 CONFIG_CLK_COMPOSITE_CCF=y
@@ -163,7 +165,7 @@ CONFIG_VIDEO_LCD_RAYDIUM_RM67191=y
 CONFIG_VIDEO_ADV7535=y
 CONFIG_SYS_WHITE_ON_BLACK=y
 
-CONFIG_LOCALVERSION="-1.0.1"
+CONFIG_LOCALVERSION="-owa5x-Balena-1.0"
 # CONFIG_LOCALVERSION_AUTO is not set
 #NAND CONFIGURATION
 CONFIG_NAND_BOOT=y
@@ -181,7 +183,8 @@ CONFIG_CMD_MTDPARTS=y
 CONFIG_FDT_FIXUP_PARTITIONS=y
 CONFIG_MTDIDS_DEFAULT="nand0=nand.0"
 
-CONFIG_MTDPARTS_DEFAULT="nand.0:8m(NAND.u-boot),8m(NAND.u-boot-bckp),1m(NAND.u-boot-env),1m(NAND.u-boot-env.backup),1m(NAND.dtb),64m(NAND.kernel),-(NAND.file-system)"
+#CONFIG_MTDPARTS_DEFAULT="nand.0:8m(NAND.u-boot),8m(NAND.u-boot-bckp),1m(NAND.u-boot-env),1m(NAND.u-boot-env.backup),1m(NAND.dtb),64m(NAND.kernel),-(NAND.file-system)"
+CONFIG_MTDPARTS_DEFAULT="nand.0:8m(NAND.u-boot),8m(NAND.u-boot-bckp),1m(NAND.u-boot-env),1m(NAND.u-boot-env.backup),503m(NAND.file-systemA),-(NAND.file-systemB)"
 CONFIG_CMD_MD5SUM=y
 CONFIG_VERSION_VARIABLE=y
 CONFIG_BOOTCOUNT_LIMIT=y 
@@ -197,4 +200,11 @@ CONFIG_CMD_TPM_V2=y
 CONFIG_TPM_V2=y
 # CONFIG_TPM_V1 is not set
 CONFIG_TPM2_TIS_SPI=y
-CONFIG_TPM=y
\ No newline at end of file
+CONFIG_TPM=y
+
+CONFIG_BLOBLIST=y
+CONFIG_SPL_BLOBLIST=y
+# CONFIG_TPL_BLOBLIST is not set
+CONFIG_BLOBLIST_SIZE=0x400
+CONFIG_BLOBLIST_ADDR=0x40000000
+# CONFIG_HANDOFF is not set
diff --git a/drivers/misc/mxc_ocotp.c b/drivers/misc/mxc_ocotp.c
index 80cd8dce..43e0a54b 100644
--- a/drivers/misc/mxc_ocotp.c
+++ b/drivers/misc/mxc_ocotp.c
@@ -231,6 +231,36 @@ static int prepare_read(struct ocotp_regs **regs, u32 bank, u32 word, u32 *val,
 	return prepare_access(regs, bank, word, val != NULL, caller);
 }
 
+int fuse_secondary_boot(u32 bank, u32 word, u32 mask, u32 off)
+{
+	int err;
+	u32 val;
+	int ret;
+
+	err = fuse_read(bank, word, &val);
+	if (err)
+		return 0;
+
+	val = (val & mask) >> off;
+
+	if (val > 10)
+		return 0;
+
+	switch (val) {
+	case 0:
+		ret = 4;
+		break;
+	case 1:
+		ret = 1;
+		break;
+	default:
+		ret = 2 << val;
+		break;
+	}
+
+	return ret;
+};
+
 int fuse_read(u32 bank, u32 word, u32 *val)
 {
 	struct ocotp_regs *regs;
diff --git a/drivers/tpm/tpm2_tis_spi.c b/drivers/tpm/tpm2_tis_spi.c
index 713111f6..058f79f7 100644
--- a/drivers/tpm/tpm2_tis_spi.c
+++ b/drivers/tpm/tpm2_tis_spi.c
@@ -518,7 +518,7 @@ static int tpm_tis_spi_cleanup(struct udevice *dev)
 static int tpm_tis_spi_open(struct udevice *dev)
 {
 	struct tpm_chip *chip = dev_get_priv(dev);
-	struct tpm_chip_priv *priv = dev_get_uclass_priv(dev);
+//	struct tpm_chip_priv *priv = dev_get_uclass_priv(dev);
 
 	if (chip->is_open)
 		return -EBUSY;
diff --git a/include/asm-generic/global_data.h b/include/asm-generic/global_data.h
index 5d027329..7cdfc19e 100644
--- a/include/asm-generic/global_data.h
+++ b/include/asm-generic/global_data.h
@@ -137,6 +137,7 @@ typedef struct global_data {
 #if CONFIG_IS_ENABLED(WDT)
 	struct udevice *watchdog_dev;
 #endif
+   u32 uboot_offset_image;
 } gd_t;
 #endif
 
diff --git a/include/bloblist.h b/include/bloblist.h
index 609ac421..a331d5d5 100644
--- a/include/bloblist.h
+++ b/include/bloblist.h
@@ -27,6 +27,7 @@ enum bloblist_tag_t {
 	BLOBLISTT_SPL_HANDOFF,		/* Hand-off info from SPL */
 	BLOBLISTT_VBOOT_CTX,		/* Chromium OS verified boot context */
 	BLOBLISTT_VBOOT_HANDOFF,	/* Chromium OS internal handoff info */
+   BLOBLISTT_SPL_UBOOT_OFF, /* UBOOT image offset*/
 };
 
 /**
diff --git a/include/configs/imx8mp_owa5x.h b/include/configs/imx8mp_owa5x.h
index 23ad7f78..9dcbb762 100644
--- a/include/configs/imx8mp_owa5x.h
+++ b/include/configs/imx8mp_owa5x.h
@@ -81,12 +81,104 @@
 #if defined(CONFIG_NAND_BOOT)
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	CONFIG_MFG_ENV_SETTINGS \
-	"bootcmd=mmc dev ${mmcdev}; if mmc rescan; then " \
+	"devicetreefile=devicetree.dtb\0" \
+	"boot_owa5x=echo Look for boot scripts;" \
+      "if fatload mmc 1 0x82000000 owa5x-boot.script; then " \
+         "echo MMC boot script found; " \
+         "source 0x82000000; " \
+         "run update_owa5x; " \
+      "else " \
+         "usb reset; " \
+         "if fatload usb 0:1 0x82000000 owa5x-boot.script; then " \
+            "usb stop; " \
+            "echo USB boot script found; " \
+            "source 0x82000000; " \
+            "run update_owa5x; " \
+         "else " \
+            "echo Boot scripts not found; " \
+            "usb stop; " \
+            "run update_owa5x; " \
+         "fi; " \
+      "fi;" \
+      "run nandboot;\0" \
+	"bootcmd=run BOOT_CMD_BALENA\0" \
+   "update_owa5x=" \
+      "if test ${updatefw} != 1; then " \
+         "echo Nothing to update; " \
+      "else " \
+         "echo Running update!!; " \
+         "run update_boot; " \
+         "run update_fs; " \
+         "run update_fsback; " \
+         "setenv updatefw; setenv loadsize;" \
+         "saveenv; " \
+         "reset; " \
+      "fi;\0" \
+   "update_boot=" \
+      "if ext4load mmc 2 0x82000200 /home/Update/flash.bin; then " \
+         "echo u-boot file found; " \
+         "setenv loadsize ${filesize};" \
+         "if ext4load mmc 2 0x82000000 /home/Update/flash.bin.md5; then " \
+            "echo u-boot md5 file found; " \
+            "md5sum 82000200 ${loadsize} *82000100; " \
+            "if cmp 0x82000000 0x82000100 0x4; then " \
+               "nand erase.part NAND.u-boot; " \
+               "nand write 0x82000200 NAND.u-boot ${loadsize}; " \
+               "nandbcb init 0x82000200 NAND.u-boot ${loadsize};" \
+               "echo u-boot updated OK; " \
+            " else " \
+               "echo u-boot md5sum ERROR; " \
+            "fi;" \
+         "else " \
+            "echo u-boot md5 file not found; " \
+         "fi; " \
+      "else " \
+         "echo u-boot file not found; " \
+      "fi;\0" \
+   "update_fs=" \
+      "if ext4load mmc 2 0x82000200 /home/Update/fs; then " \
+         "echo FS file found; " \
+         "setenv loadsize ${filesize};" \
+         "if ext4load mmc 2 0x82000000 /home/Update/fs.md5; then " \
+            "echo FS md5 file found; " \
+            "md5sum 82000200 ${loadsize} *82000100; " \
+            "if cmp 0x82000000 0x82000100 0x4; then " \
+               "nand erase.part NAND.file-systemA; " \
+               "nand write 0x82000200 NAND.file-systemA ${loadsize}; " \
+            " else " \
+               "echo FS md5sum ERROR; " \
+            "fi;" \
+         "else " \
+            "echo FS md5 file not found; " \
+         "fi; " \
+      "else " \
+         "echo FS file not found; " \
+      "fi;\0" \
+   "update_fsback=" \
+      "if ext4load mmc 2 0x82000200 /home/Update/fsback; then " \
+         "echo FS backup file found; " \
+         "setenv loadsize ${filesize};" \
+         "if ext4load mmc 2 0x82000000 /home/Update/fsback.md5; then " \
+            "echo FS backup md5 file found; " \
+            "md5sum 82000200 ${loadsize} *82000100; " \
+            "if cmp 0x82000000 0x82000100 0x4; then " \
+               "nand erase.part NAND.file-systemB; " \
+               "nand write 0x82000200 NAND.file-systemB ${loadsize}; " \
+            " else " \
+               "echo FS backup md5sum ERROR; " \
+            "fi;" \
+         "else " \
+            "echo FS backup md5 file not found; " \
+         "fi; " \
+      "else " \
+         "echo FS backup file not found; " \
+      "fi;\0" \
+	"mmcboot=mmc dev ${mmcdev}; if mmc rescan; then " \
 	   "if run loadbootscript; then " \
 		   "run bootscript; " \
 	   "else " \
 		   "if run loadimage; then " \
-			   "run mmcboot; " \
+			   "run startmmcboot; " \
 		   "else run netboot; " \
 		   "fi; " \
 	   "fi; " \
@@ -104,10 +196,13 @@
 	"console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200\0" \
 	"mmcdev=2\0" \
 	"mmcpart=1\0" \
-	"mmcroot=" CONFIG_MMCROOT " rootwait quiet rw mtdparts\0" \
+	"mmcroot=" CONFIG_MMCROOT " rootwait=1 quiet rw\0" \
 	"mmcautodetect=yes\0" \
-	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}\0 " \
-	"mmcboot=echo Booting from mmc ...; " \
+	"zip_addr=0x70480000\0" \
+	"mmcargs=setenv bootargs console=${console} root=${mmcroot} rootfstype=ext4\0" \
+	"BOOT_CMD_BALENA=run mmcargs; fatload mmc 1:1 ${zip_addr} ${image}; fatload mmc 1:1 ${fdt_addr} ${fdt_file}; unzip ${zip_addr} ${loadaddr}; "\
+	"booti ${loadaddr} - ${fdt_addr};\0" \
+	"startmmcboot=echo Booting from mmc ...; " \
 		"run mmcargs; " \
 		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
 			"bootm ${loadaddr}; " \
@@ -139,17 +234,19 @@
 		"${optargs} " \
 		"root=${nandroot} " \
 		"rootfstype=${nandrootfstype}\0" \
-	"nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096\0" \
+	"nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-systemA,4096\0" \
 	"nandrootfstype=ubifs rootwait=1 quiet\0" \
 	"nandboot=echo Booting from nand ...; " \
 		"run nandargs; " \
-		"nand read ${fdt_addr} NAND.dtb; " \
-		"nand read ${loadaddr} NAND.kernel 0x2000000; " \
+		"ubi part NAND.file-systemA; " \
+		"ubifsmount ubi0; " \
+		"ubifsload ${fdt_addr} /boot/${devicetreefile}; " \
+		"ubifsload ${loadaddr} /boot/Image; " \
 		"booti ${loadaddr} - ${fdt_addr}\0" \
 	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
 	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
 	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
-	"image=Image\0" \
+	"image=Image.gz\0" \
 	"netargs=setenv bootargs ${jh_clk} console=${console} " \
 		"root=/dev/nfs " \
 		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
@@ -271,6 +368,8 @@
 #define PHYS_SDRAM			0x40000000
 #define PHYS_SDRAM_SIZE			0x80000000	/* 2 GB */
 
+/* Maximum decompressed kernel size 64MB*/
+#define CONFIG_SYS_BOOTM_LEN		SZ_64M /* Increase max gunzip size */
 /*
 #define PHYS_SDRAM_2			0xC0000000
 #define PHYS_SDRAM_2_SIZE		0x80000000	*//* 2 GB */
diff --git a/include/env_default.h b/include/env_default.h
index 56a8bae3..197abe29 100644
--- a/include/env_default.h
+++ b/include/env_default.h
@@ -8,6 +8,7 @@
  */
 
 #include <env_callback.h>
+#include <env_resin.h>
 
 #ifdef DEFAULT_ENV_INSTANCE_EMBEDDED
 env_t embedded_environment __UBOOT_ENV_SECTION__(environment) = {
diff --git a/include/fuse.h b/include/fuse.h
index d48dcdfa..7faa6866 100644
--- a/include/fuse.h
+++ b/include/fuse.h
@@ -23,5 +23,6 @@ int fuse_read(u32 bank, u32 word, u32 *val);
 int fuse_sense(u32 bank, u32 word, u32 *val);
 int fuse_prog(u32 bank, u32 word, u32 val);
 int fuse_override(u32 bank, u32 word, u32 val);
+int fuse_secondary_boot(u32 bank, u32 word, u32 mask, u32 off);
 
 #endif	/* _FUSE_H_ */
